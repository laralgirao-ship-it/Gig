name: Build Android APK (Expo + Gradle)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  APP_PATH: ROV_Project/ROV_VoiceApp

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Print repo tree (root)
        run: |
          pwd
          ls -la
          echo "----"
          ls -la "$APP_PATH" || true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: ${{ env.APP_PATH }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.APP_PATH }}
        run: |
          npm ci || npm install
          npx expo --version || npx --yes expo-cli --version || true

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: Expo prebuild (Android) + force SDK 36
        working-directory: ${{ env.APP_PATH }}
        run: |
          set -e
          npx expo prebuild --platform android --non-interactive | tee ../_prebuild.log
          sed -i 's/^android\.compileSdkVersion=.*/android.compileSdkVersion=36/g' android/gradle.properties || true
          sed -i 's/^android\.targetSdkVersion=.*/android.targetSdkVersion=36/g'   android/gradle.properties || true
          grep -q '^android.useAndroidX=true'    android/gradle.properties || echo 'android.useAndroidX=true'    >> android/gradle.properties
          grep -q '^android.enableJetifier=true' android/gradle.properties || echo 'android.enableJetifier=true' >> android/gradle.properties
          chmod +x android/gradlew || true

      - name: Build APK (Debug)
        working-directory: ${{ env.APP_PATH }}/android
        run: |
          ./gradlew --version
          ./gradlew assembleDebug --no-daemon --stacktrace | tee ../../_gradle-debug.log

      - name: Upload Debug APK (if exists)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: ${{ env.APP_PATH }}/android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: ignore

      - name: Upload logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            ${{ env.APP_PATH }}/../_prebuild.log
            ${{ env.APP_PATH }}/../_gradle-debug.log

      - name: Build APK (Release unsigned)
        working-directory: ${{ env.APP_PATH }}/android
        run: ./gradlew assembleRelease --no-daemon --stacktrace | tee ../../_gradle-release.log

      - name: Upload Release (unsigned) + logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned-apk-and-logs
          path: |
            ${{ env.APP_PATH }}/android/app/build/outputs/apk/release/app-release-unsigned.apk
            ${{ env.APP_PATH }}/../_gradle-release.log
          if-no-files-found: ignore
