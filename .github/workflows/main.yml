name: Build Android APK (Expo + Gradle)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  APP_PATH: ROV_Project/ROV_VoiceApp
  LOG_DIR: ROV_Project/ROV_VoiceApp/_logs

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure logs dir + show tree
        run: |
          mkdir -p "${{ env.LOG_DIR }}"
          echo "ROOT:"
          ls -la
          echo "APP_PATH:"
          ls -la "${{ env.APP_PATH }}" || true

      - name: Setup Node.js (no cache)
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # ✅ Patch automático no package.json (1 arquivo só)
      # - remove react-native-voice se existir (versão antiga e inexistente)
      # - garante expo-speech
      # - fixa react-native-svg@15.12.1 (aviso do Expo)
      - name: Patch package.json (safe)
        working-directory: ${{ env.APP_PATH }}
        run: |
          node -e '
            const fs = require("fs");
            const p = "package.json";
            const pkg = JSON.parse(fs.readFileSync(p, "utf8"));

            const deps = pkg.dependencies || (pkg.dependencies = {});

            // remover lib antiga se existir
            if (deps["react-native-voice"]) {
              delete deps["react-native-voice"];
              console.log("Removed dependency: react-native-voice");
            }

            // garantir expo-speech
            if (!deps["expo-speech"]) {
              deps["expo-speech"] = "*";
              console.log("Added dependency: expo-speech");
            }

            // ajustar react-native-svg
            if (deps["react-native-svg"] && deps["react-native-svg"] !== "15.12.1") {
              deps["react-native-svg"] = "15.12.1";
              console.log("Pinned react-native-svg@15.12.1");
            }

            fs.writeFileSync(p, JSON.stringify(pkg, null, 2));
            console.log("package.json patched");
          '

      - name: Install dependencies
        working-directory: ${{ env.APP_PATH }}
        run: |
          npm install --no-audit --no-fund
          npx expo --version || npx --yes expo-cli --version || true

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: Expo prebuild (Android) + force SDK 36
        working-directory: ${{ env.APP_PATH }}
        run: |
          set -e
          npx expo prebuild --platform android --non-interactive | tee "${{ env.LOG_DIR }}/prebuild.log"
          sed -i 's/^android\.compileSdkVersion=.*/android.compileSdkVersion=36/g' android/gradle.properties || true
          sed -i 's/^android\.targetSdkVersion=.*/android.targetSdkVersion=36/g'   android/gradle.properties || true
          grep -q '^android.useAndroidX=true'    android/gradle.properties || echo 'android.useAndroidX=true'    >> android/gradle.properties
          grep -q '^android.enableJetifier=true' android/gradle.properties || echo 'android.enableJetifier=true' >> android/gradle.properties
          chmod +x android/gradlew || true

      - name: Build APK (Debug)
        working-directory: ${{ env.APP_PATH }}/android
        run: |
          ./gradlew assembleDebug --no-daemon --stacktrace | tee "${{ env.LOG_DIR }}/gradle-debug.log"

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: ${{ env.APP_PATH }}/android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: ignore

      - name: Build APK (Release unsigned)
        working-directory: ${{ env.APP_PATH }}/android
        run: |
          ./gradlew assembleRelease --no-daemon --stacktrace | tee "${{ env.LOG_DIR }}/gradle-release.log"

      - name: Upload Release APK (unsigned)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned-apk
          path: ${{ env.APP_PATH }}/android/app/build/outputs/apk/release/app-release-unsigned.apk
          if-no-files-found: ignore

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: ${{ env.LOG_DIR }}/*.log
          if-no-files-found: warn
