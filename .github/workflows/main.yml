name: Build Android APK (Expo + Gradle)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  CI: true
  NODE_ENV: production

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Show tree
        run: |
          pwd
          ls -la

      # Garante pacote de voz correto e remove lock quebrado
      - name: Fix voice dependency
        run: |
          rm -f package-lock.json yarn.lock npm-shrinkwrap.json || true
          node - <<'NODE'
          const fs = require('fs');
          const p='package.json';
          const pkg=JSON.parse(fs.readFileSync(p,'utf8'));
          pkg.dependencies = pkg.dependencies || {};
          delete pkg.dependencies['react-native-voice'];
          if (!pkg.dependencies['@react-native-voice/voice']) {
            pkg.dependencies['@react-native-voice/voice']='^3.2.4';
          }
          fs.writeFileSync(p, JSON.stringify(pkg,null,2)+"\n");
          console.log('✔ package.json fixado para @react-native-voice/voice ^3.2.4');
          NODE
          [ -f App.js ] && sed -i "s/['\"\\`]react-native-voice['\"\\`]/@react-native-voice\\/voice/g" App.js || true
          grep -n '"@react-native-voice/voice"' package.json || (echo "❌ Falta @react-native-voice/voice" && exit 1)

      # Garante app.json válido: android.package + plugin build-properties (sdk 36, Hermes off)
      - name: Patch app.json (android.package, build-properties, Hermes off)
        run: |
          node - <<'NODE'
          const fs=require('fs'); const p='app.json';
          if(!fs.existsSync(p)){ console.error('❌ app.json não encontrado'); process.exit(1); }
          const j=JSON.parse(fs.readFileSync(p,'utf8'));
          j.expo = j.expo || {};
          j.expo.android = j.expo.android || {};
          if(!j.expo.android.package) j.expo.android.package = "com.laralgirao.rovvoiceapp";
          const want = ["expo-build-properties",{
            android: { compileSdkVersion: 36, targetSdkVersion: 36, kotlinVersion: "1.9.24", enableProguardInReleaseBuilds: false, extraProguardRules: "" },
            ios: { deploymentTarget: "13.4" }
          }];
          j.expo.plugins = j.expo.plugins || [];
          const idx = j.expo.plugins.findIndex(x => Array.isArray(x) && x[0]==="expo-build-properties");
          if (idx>=0) j.expo.plugins[idx]=want; else j.expo.plugins.push(want);
          # usa JSC para reduzir chance de OOM no Jetifier (não necessário se não usar voice, mas útil)
          j.expo.jsEngine = "jsc";
          fs.writeFileSync(p, JSON.stringify(j,null,2)+"\n");
          console.log('✔ app.json patch: android.package, build-properties, jsEngine=jsc');
          NODE
          cat app.json

      - name: Install deps
        run: npm install --legacy-peer-deps

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses 👈 Corrigido/Melhorado
        run: $ANDROID_HOME/tools/bin/sdkmanager --licenses || true 👈 Corrigido

      - name: Expo prebuild (Android)
        run: npx expo prebuild --platform android

      - name: Bump Gradle memory and AndroidX/Jetifier
        run: |
          sed -i 's/^org\.gradle\.jvmargs=.*/org.gradle.jvmargs=-Xmx6144m -Dkotlin.daemon.jvm.options=-Xmx2048m/g' android/gradle.properties || echo "org.gradle.jvmargs=-Xmx6144m -Dkotlin.daemon.jvm.options=-Xmx2048m" >> android/gradle.properties
          grep -q '^android.useAndroidX=true' android/gradle.properties || echo 'android.useAndroidX=true' >> android/gradle.properties 👈 Estilística
          grep -q '^android.enableJetifier=true' android/gradle.properties || echo 'android.enableJetifier=true' >> android/gradle.properties 👈 Estilística
          echo "GRADLE_USER_HOME=$HOME/.gradle" >> $GITHUB_ENV
          echo "JAVA_TOOL_OPTIONS=-Xmx3g" >> $GITHUB_ENV

      - name: Build APK (Debug)
        working-directory: android
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Build APK (Release unsigned)
        if: ${{ always() }} 👈 Sintaxe corrigida
        working-directory: android
        run: ./gradlew --no-daemon --stacktrace assembleRelease || true

      - name: List outputs
        if: ${{ always() }} 👈 Sintaxe corrigida
        run: |
          echo "=== APKs ==="
          find android/app/build/outputs -type f -name "*.apk" -print || true
          echo "=== Logs ==="
          find android -type f -name "*.log" -print || true

      - name: Upload Debug APK
        if: ${{ always() }} 👈 Sintaxe corrigida
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/*.apk
          if-no-files-found: warn

      - name: Upload Release APK (unsigned)
        if: ${{ always() }} 👈 Sintaxe corrigida
        uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned
          path: android/app/build/outputs/apk/release/*.apk
          if-no-files-found: warn

      - name: Upload ALL build outputs (fallback)
        if: ${{ always() }} 👈 Sintaxe corrigida
        uses: actions/upload-artifact@v4
        with:
          name: android-outputs
          path: android/app/build/outputs/**
          if-no-files-found: warn
